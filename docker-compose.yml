
services:
  spring-app:
    image: hanjihoon0315/docker-springboot:latest
#    build:
#      context: .
#      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SPRING_REDIS_HOST=redis
      - SPRING_DATASOURCE_URL=jdbc:mysql://host.docker.internal:3306/jlaner?serverTimezone=Asia/Seoul
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=raik1353
#      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/jlaner?allowPublicKeyRetrieval=true  # MySQL 연결 URL
#      - SPRING_DATASOURCE_USERNAME=root  # MySQL 사용자명
#      - SPRING_DATASOURCE_PASSWORD=raik1353  # MySQL 비밀번호
    restart: always
    depends_on:
      - redis
      - mysql  # MySQL 서비스에 의존성 추가
    networks:
      - backend

#  nginx:
#    image: hanjihoon0315/docker-nginx:latest
#    ports:
#      - "80:80"
#    restart: always
#    depends_on:
#      - spring-app

  redis:
    container_name: redis
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./redis/conf/redis.conf:/usr/local/conf/redis.conf
    networks:
      - backend

  mysql:
    container_name: mysql
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: raik1353  # MySQL 루트 비밀번호 설정
      MYSQL_DATABASE: jlaner  # 기본적으로 생성할 데이터베이스 이름
      TZ: Asia/Seoul
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql  # MySQL 데이터 영속화를 위한 볼륨 설정
      - ./jlaner.sql:/docker-entrypoint-initdb.d/jlaner.sql
    networks:
      - backend

volumes:
  redis-data:
  mysql-data:

networks:
  backend:

